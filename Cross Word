import java.util.Scanner;
public class Solution{
    public static void main (String [] args){
        Scanner scn = new Scanner (System.in);
        int n = scn.nextInt();
        int m = scn.nextInt();
        char [][] A = new char [m][n];
        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                A [i][j] = scn.next().charAt(0);
            }
        }
        String word = scn.next();
        boolean ans = crossword (A, word, m, n);
        System.out.println (ans);
    }
    public static boolean crossword (char [][] A, String word, int m, int n){
        char firstCh = word.charAt(0);
        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                if (A [i][j] == firstCh){
                    boolean dirAns = search6Dir(A, word, i, j, m, n);
                    if (dirAns){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public static boolean search6Dir (char [][] A, String word, int i, int j, int m, int n){
        if (dir1(A, word, i, j, m, n) || dir2(A, word, i, j, m, n) || dir3(A, word, i, j, m, n) || dir4(A, word, i, j, m, n) || dir5(A, word, i, j, m, n) || dir6(A, word, i, j, m, n)){
            return true;
        }
        return false;
    }
    public static boolean dir1 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (j >= n){
                return false;
            }
            if (word.charAt(k) != A [i][j]){
                return false;
            }
            j++;
        }
        return true;
    }
    public static boolean dir2 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (i >= m){
                return false;
            }
            if (word.charAt(k) != A [i][j]){
                return false;
            }
            i++;
        }
        return true;
    }
    public static boolean dir3 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (i >= m || j >= n){
                return false;
            }
            if (word.charAt(k) != A[i][j]){
                return false;
            }
            i++;
            j++;
        }
        return true;
    }
    public static boolean dir4 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (i < 0 || j < 0){
                return false;
            }
            if (word.charAt(k) != A[i][j]){
                return false;
            }
            i--;
            j--;
        }
        return true;
    }
    public static boolean dir5 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (i >= m || j >= n || i < 0 || j < 0){
                return false;
            }
            if (word.charAt(k) != A[i][j]){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
    public static boolean dir6 (char [][] A, String word, int i, int j, int m, int n){
        for (int k = 0; k < word.length(); k++){
            if (i >= m || j >= n || i < 0 || j < 0){
                return false;
            }
            if (word.charAt(k) != A[i][j]){
                return false;
            }
            i--;
            j++;
        }
        return true;
    }
}
